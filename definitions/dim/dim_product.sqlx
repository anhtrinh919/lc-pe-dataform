config {
  type: "table",
  schema: "dim",
  tags: ["dim","product","conformed"]
}

-- 1) Collect attributes over time from daily + monthly
WITH attrs AS (
  SELECT
    article_code,
    sale_date AS as_of,
    product_name   AS article_description,
    sv, division, department, fam_group, family, sub_family
  FROM ${ref("stage_sales_daily")}

  UNION ALL
  SELECT
    article_code,
    sale_month AS as_of,
    description AS article_description,
    sv, division, department, fam_group, family, sub_family
  FROM ${ref("stage_sales_monthly")}
),

-- 2) Pick the latest non-null attribute per article_code
latest AS (
  SELECT
    article_code,
    (ARRAY_AGG(article_description IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS article_description,
    (ARRAY_AGG(sv              IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS sv,
    (ARRAY_AGG(division        IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS division,
    (ARRAY_AGG(department      IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS department,
    (ARRAY_AGG(fam_group       IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS fam_group,
    (ARRAY_AGG(family          IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS family,
    (ARRAY_AGG(sub_family      IGNORE NULLS ORDER BY as_of DESC LIMIT 1))[OFFSET(0)] AS sub_family
  FROM attrs
  GROUP BY article_code
),

-- 3) Sightings window (first/last seen)
seen AS (
  SELECT
    article_code,
    MIN(as_of) AS first_seen,
    MAX(as_of) AS last_seen
  FROM attrs
  GROUP BY article_code
)

SELECT
  l.article_code,
  l.article_description,
  l.sv,
  l.division,
  l.department,
  l.fam_group,
  l.family,
  l.sub_family,
  s.first_seen,
  s.last_seen,
  CAST(FARM_FINGERPRINT(l.article_code) AS INT64) AS product_sk
FROM latest l
LEFT JOIN seen s USING (article_code)