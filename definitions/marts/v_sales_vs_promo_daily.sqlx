config {
  type: "view",
  schema: "marts",
  tags: ["sales","promo","daily","agent"]
}

WITH sales AS (
  SELECT
    d.sale_date AS date,
    d.store_id,
    d.article_code,
    d.supplier_code,
    d.quantity AS qty,
    d.turnover,
    d.vat_amount,
    d.cost_value,
    d.margin_value,
    SAFE_DIVIDE(d.margin_value, NULLIF(d.turnover,0)) AS margin_percent
  FROM ${ref("fact_sales_daily")} d
),
promo_union AS (
  SELECT
    SAFE_CAST(sale_date AS DATE) AS date,
    CAST(store_id AS STRING)     AS store_id,
    CAST(barcode AS STRING)      AS barcode,
    CAST(discount_name AS STRING) AS promo_id,
    CAST(discount_desc AS STRING) AS promo_desc,
    SAFE_CAST(discount_amount AS NUMERIC) AS discount_value,
    'stage_promo_daily' AS src_table
  FROM ${ref("stage_promo_daily")}
  WHERE sale_date IS NOT NULL AND store_id IS NOT NULL AND barcode IS NOT NULL AND discount_name IS NOT NULL

  UNION ALL

  SELECT
    SAFE_CAST(sale_date AS DATE),
    CAST(store_id AS STRING),
    CAST(barcode AS STRING),
    CAST(discount_name AS STRING),
    CAST(discount_desc AS STRING),
    SAFE_CAST(discount_amount AS NUMERIC),
    'stage_promo_vll'
  FROM ${ref("stage_promo_vll")}
  WHERE sale_date IS NOT NULL AND store_id IS NOT NULL AND barcode IS NOT NULL AND discount_name IS NOT NULL
),
promo_by_barcode AS (
  SELECT
    date, store_id, barcode,
    COUNT(DISTINCT promo_id)            AS n_promos,
    STRING_AGG(DISTINCT promo_id, ',')  AS promo_ids,
    ANY_VALUE(promo_desc)               AS sample_promo_desc,
    MAX(discount_value)                 AS max_discount_value,
    STRING_AGG(DISTINCT src_table, ',') AS promo_sources
  FROM promo_union
  GROUP BY date, store_id, barcode
),
promo_resolved AS (
  SELECT
    p.date,
    p.store_id,
    b.article_code,
    p.n_promos,
    p.promo_ids,
    p.sample_promo_desc,
    p.max_discount_value,
    p.promo_sources
  FROM promo_by_barcode p
  JOIN ${ref("bridge_product_barcode")} b
    ON b.barcode = p.barcode
),
store AS (SELECT store_id, store_name, province, district FROM ${ref("dim_store")}),
prod  AS (SELECT article_code, article_description, sv, division, department, fam_group, family, sub_family FROM ${ref("dim_product")}),
supp  AS (SELECT supplier_code, supplier_name FROM ${ref("dim_supplier")})

SELECT
  s.date,
  s.store_id,
  st.store_name,
  st.province,
  st.district,
  s.article_code,
  p.article_description,
  p.sv, p.division, p.department, p.fam_group, p.family, p.sub_family,
  s.supplier_code,
  sp.supplier_name,

  -- sales measures
  s.qty,
  s.turnover,
  s.vat_amount,
  s.cost_value,
  s.margin_value,
  s.margin_percent,

  -- promo overlay
  IFNULL(r.n_promos, 0)           AS n_promos,
  r.promo_ids,
  r.sample_promo_desc,
  r.max_discount_value,
  COALESCE(r.n_promos > 0, FALSE) AS is_promo_day,
  r.promo_sources

FROM sales s
LEFT JOIN promo_resolved r
  ON r.date = s.date
 AND r.store_id = s.store_id
 AND r.article_code = s.article_code
LEFT JOIN store st
  ON st.store_id = s.store_id
LEFT JOIN prod p
  ON p.article_code = s.article_code
LEFT JOIN supp sp
  ON sp.supplier_code = s.supplier_code